}
"usercode":"importjava.io.FileWriter;\nimportjava.io.FileReader;\nimportjava.io.BufferedWriter;\nimportjava.io.BufferedReader;\nimportjava.io.File;\nimportjava.io.FileOutputStream;\nimportjava.io.IOException;\nimportjava.io.OutputStreamWriter;\nimportjava.io.Writer;\nimportjava.io.PrintWriter;\n\n/****ODSATag:Link****/\nclassLink{\nprivateObjecte;\nprivateLinkn;\n\n//Constructors\nLink(Objectine,Linkinn){e=ine;n=inn;}\nLink(Linkinn){e=null;n=inn;}\n\npublicObjectelement(){returne;}//Returnthevalue\npublicvoidsetelement(Objectine){e=ine;}//Setelementvalue\npublicLinknext(){returnn;}//Returnnextlink\npublicvoidsetnext(Linkinn){n=inn;}//Setnextlink\n}\n/****ODSAendTag:Link****/\n\npublicclassstudentpntrequalspntrPROG{\n\npublicstaticvoidmain(String[]args){\n\n\nbooleanSUCCESS=false;\n\nLinkstudentsHead;\n\nstudentsHead=reAssignPointer();\n\nLinkMthird=newLink(3,null);\nLinkMsecond=newLink(2,Mthird);\nLinkMfirst=newLink(1,Msecond);\n\t\nLinkMp;\nLinkMq;\nLinkMr;\n\t\nMp=Mfirst;\nMq=Msecond;\n\nMp=Mq;\n\nif(Mp.element()==studentsHead.element())SUCCESS=true;\n\ntry{\n\n\nPrintWriteroutput=newPrintWriter("output","UTF-8");\n\n\nif(SUCCESS){\n\noutput.println("WellDone!");\noutput.close();\n}\nelse\n{\noutput.println("TryAgain!Youhaveeitherdisconnectedyourlinksorincorrectlyreassignedthevariablep.");\noutput.close();\n\n}\n\n}\ncatch(IOExceptione){\n\te.printStackTrace();\n}\n\n\n}\n\npublicstaticLinkcreateList(intone,inttwo,intthree){\n\nLinktail=newLink(three,null);\nLinknext=newLink(two,tail);\nLinkhead=newLink(one,next);\n\nreturnhead;\n}\n\npublicstaticvoidendTraceNow(){\n\n//Endthetrace\n//Thisfunction'sonlypurposeistoactasaflagtoendthetrace\n//fortheJava-Visualization\n}\n\npublicstaticvoidstartTraceNow(){\n\n//startthetrace\n//Thisfunction'sonlypurposeistoactasaflagtostartthetrace\n//fortheJava-Visualization\n}\n\npublicstaticbooleancheckIfLinksLinked(Linkhead){\n\nObjecttwo=2;\nObjectthree=3;\n\nbooleanlinkFlag=false;\n\nif(head.element()==two)\n{\nif(head.next().element()==three)\n{\nlinkFlag=true;\n}\nelse\n{\nlinkFlag=false;\n}\n}\nelse\n{\nlinkFlag=false;\n}\n\nreturnlinkFlag;\n}\n\n\n\npublicstaticLinkreAssignPointer(){\n\t\n\tstartTraceNow();\n\n\tLinkp=createList(1,2,3);\n\tLinkq=p.next();\n\n\tp=q;\n\t\n\tendTraceNow();\n\n\treturnp;\n\n\t}\n\n}\n\n\n",
"options":{},
"args":[],
"stdin":""
}